// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeSharingApp.Data;

#nullable disable

namespace RecipeSharingApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250124152904_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RecipeSharingApp.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("DATETIME");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Content = "This recipe is amazing! I made it last weekend, and it was a hit with my family. Highly recommend!",
                            RecipeId = 1,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5622),
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 2,
                            Content = "Very easy to make and delicious! The instructions were clear, and the flavor was spot on. I'll definitely make it again.",
                            RecipeId = 1,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5668),
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 3,
                            Content = "A fantastic dish! The flavors were so rich and satisfying. My guests loved it!",
                            RecipeId = 2,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5671),
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 4,
                            Content = "Great dessert! Simple to prepare and the taste was incredible. Will make it again for sure.",
                            RecipeId = 2,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5675),
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 5,
                            Content = "A true comfort food! I followed the recipe exactly and it turned out perfectly. A family favorite!",
                            RecipeId = 3,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5679),
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 6,
                            Content = "So flavorful and hearty. The dish was a bit time-consuming, but worth every minute. Definitely making it again.",
                            RecipeId = 3,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5682),
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 7,
                            Content = "The sushi was fresh and easy to prepare. I loved how everything came together. Will make it again soon!",
                            RecipeId = 4,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5684),
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 8,
                            Content = "Delicious! The combination of ingredients was perfect, and it was so satisfying. Highly recommend this recipe!",
                            RecipeId = 4,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5687),
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 9,
                            Content = "Tasty and quick! This recipe was a big hit at dinner time, and it was so simple to make.",
                            RecipeId = 5,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5690),
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 10,
                            Content = "I added a few extra veggies to the mix and it turned out even better! So flavorful.",
                            RecipeId = 5,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5692),
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 11,
                            Content = "Loved this dish! The flavors were fantastic, and it was just the right amount of spice. I'll definitely cook it again.",
                            RecipeId = 6,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5695),
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 12,
                            Content = "Amazing! This is one of my favorite recipes. The rice and sauce combination is perfect.",
                            RecipeId = 6,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5698),
                            UserId = 4
                        },
                        new
                        {
                            CommentId = 13,
                            Content = "This was a fantastic dinner! The flavors of the beef and spices really stood out. My family loved it!",
                            RecipeId = 7,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5700),
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 14,
                            Content = "Great recipe! The curry flavor was amazing, and the dish was easy to make. I'll definitely be making this again.",
                            RecipeId = 7,
                            Time = new DateTime(2025, 1, 24, 17, 29, 4, 314, DateTimeKind.Local).AddTicks(5703),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("RecipeSharingApp.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("varchar(2000)");

                    b.Property<int>("PreparationTime")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            Category = "Breakfast",
                            ImageUrl = "/images/pancakes.jpg",
                            Ingredients = "250g flour\n30g sugar\n10g baking powder\n2g salt\n375ml milk\n2 eggs\n50g melted butter",
                            Instructions = "Mix all ingredients in a bowl. Heat a non-stick pan and pour the batter to form pancakes. Cook until bubbles form, flip, and cook until golden.",
                            PreparationTime = 20,
                            Region = "UK",
                            Title = "Pancakes",
                            UserId = 1
                        },
                        new
                        {
                            RecipeId = 2,
                            Category = "Dessert",
                            ImageUrl = "/images/tiramisu.jpg",
                            Ingredients = "6 egg yolks\n150g sugar\n250g mascarpone cheese\n400ml heavy cream\n500ml espresso, cooled\n200g ladyfingers\nCocoa powder for dusting",
                            Instructions = "Whisk egg yolks with sugar until creamy. Fold in mascarpone cheese and whipped cream. Layer ladyfingers dipped in espresso and mascarpone mixture. Dust with cocoa and refrigerate.",
                            PreparationTime = 30,
                            Region = "Italy",
                            Title = "Tiramisu",
                            UserId = 2
                        },
                        new
                        {
                            RecipeId = 3,
                            Category = "Main Dish",
                            ImageUrl = "/images/sarmale.jpg",
                            Ingredients = "500g minced pork\n300g minced beef\n200g rice\n2 onions, finely chopped\n50ml oil\n200g smoked bacon\n1 large pickled cabbage\n1 liter tomato juice",
                            Instructions = "Mix meat with rice, onions, and spices. Wrap the mixture in cabbage leaves to form rolls. Place them in a pot, add bacon slices and tomato juice. Simmer for 2-3 hours.",
                            PreparationTime = 180,
                            Region = "Romania",
                            Title = "Sarmale",
                            UserId = 1
                        },
                        new
                        {
                            RecipeId = 4,
                            Category = "Main Dish",
                            ImageUrl = "/images/sushi.jpg",
                            Ingredients = "400g sushi rice\n600ml water\n80ml rice vinegar\n10g sugar\n2g salt\nNori seaweed sheets\nFresh fish, cucumber, avocado",
                            Instructions = "Cook sushi rice. Mix with vinegar, sugar, and salt. Place rice on nori sheet, add fillings, and roll tightly. Slice into bite-sized pieces.",
                            PreparationTime = 40,
                            Region = "Japan",
                            Title = "Sushi",
                            UserId = 2
                        },
                        new
                        {
                            RecipeId = 5,
                            Category = "Main Dish",
                            ImageUrl = "/images/chowmein.jpg",
                            Ingredients = "250g egg noodles\n200g chicken breast, sliced\n1 carrot, julienned\n1 bell pepper, sliced\n50ml soy sauce\n2 tablespoons oyster sauce\n10g ginger, grated\n2 garlic cloves, minced",
                            Instructions = "Stir-fry chicken with ginger and garlic. Add vegetables and sauces, then stir in cooked noodles. Mix thoroughly and serve hot.",
                            PreparationTime = 25,
                            Region = "China",
                            Title = "Chow Mein",
                            UserId = 1
                        },
                        new
                        {
                            RecipeId = 6,
                            Category = "Main Dish",
                            ImageUrl = "/images/jollofrice.jpg",
                            Ingredients = "500g long-grain rice\n400g canned tomatoes\n150g tomato paste\n1 onion, chopped\n2 bell peppers, sliced\n2 garlic cloves, minced\n100ml vegetable oil\n500ml chicken stock",
                            Instructions = "Cook onions and tomato paste in oil. Add blended tomatoes, bell peppers, and spices. Stir in rice and stock, then simmer until cooked.",
                            PreparationTime = 50,
                            Region = "Nigeria",
                            Title = "Jollof Rice",
                            UserId = 2
                        },
                        new
                        {
                            RecipeId = 7,
                            Category = "Main Dish",
                            ImageUrl = "/images/bobotie.jpg",
                            Ingredients = "500g minced beef, 1 onion, chopped, 2 slices of bread, 150ml milk, 2 eggs, 2 tablespoons curry powder, 50g raisins, Bay leaves",
                            Instructions = "Soak bread in milk. Mix with beef, onions, curry powder, and raisins. Bake in a casserole dish with an egg mixture on top, garnished with bay leaves.",
                            PreparationTime = 60,
                            Region = "South Africa",
                            Title = "Bobotie",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RecipeSharingApp.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "user1@mail.com",
                            PasswordHash = "1111",
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "user2@mail.com",
                            PasswordHash = "2222",
                            Username = "user2"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "user3@mail.com",
                            PasswordHash = "3333",
                            Username = "user3"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "user4@mail.com",
                            PasswordHash = "4444",
                            Username = "user4"
                        });
                });

            modelBuilder.Entity("RecipeSharingApp.Models.Comment", b =>
                {
                    b.HasOne("RecipeSharingApp.Models.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeSharingApp.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeSharingApp.Models.Recipe", b =>
                {
                    b.HasOne("RecipeSharingApp.Models.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RecipeSharingApp.Models.Recipe", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("RecipeSharingApp.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
